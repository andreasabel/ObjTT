terminator Decl "" ;

DAxiom.    Decl ::= Ident ":" Exp ";" ;
-- DDef.      Decl ::= Ident ":" Exp ":=" Exp ";" ;

EId.       Exp  ::= Exp1 "=" Exp1 ;
ERefl.     Exp2 ::= "refl" "(" Exp ")" ;
EIdRec.    Exp2 ::= "idrec" "(" "[" Ident "," Ident "," Ident "]" Exp
                            "," Exp
                            "," "[" Ident "]" Exp
                            ")" ;
EIdConv.   Exp2 ::= "idconv" "(" "[" Ident "," Ident "," Ident "]" Exp
                             "," Exp
                             "," "[" Ident "]" Exp
                             ")" ;

EPi.       Exp  ::= "(" Ident ":" Exp ")" "->" Exp ;
ELam.      Exp  ::= "\\" "(" Ident ":" Exp ")" "->" Exp ;
EApp.      Exp1 ::= Exp1 Exp2 ;
EBetaConv. Exp2 ::= "betaconv" "(" Exp "," "[" Ident "]" Exp ")" ;

EVar.      Exp2 ::= Ident ;
EUniv.     Exp2 ::= "U";
EEl.       Exp2 ::= "El" "(" Exp ")";

coercions Exp 2;

comment "--" ;
comment "{-" "-}" ;
